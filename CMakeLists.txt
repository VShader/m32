cmake_minimum_required(VERSION 2.8.9)
project(m32)

if(NOT DEFINED CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE "Release")
endif()
message(STATUS ${CMAKE_BUILD_TYPE})

set(m32_VERSION_MAJOR "0")
set(m32_VERSION_MINOR "5")

#configre a header file to pass the version to the source code.
configure_file("${CMAKE_CURRENT_SOURCE_DIR}/${PROJECT_NAME}Config.h.in"
                "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.h")
include_directories(${CMAKE_CURRENT_BINARY_DIR})

if(MINGW)
    set(CMAKE_CXX_FLAGS "${CMAKE_C_FLAGS} -std=c++11")
endif(MINGW)

add_subdirectory(libM32CPU)
add_subdirectory(m32_cpu)
add_subdirectory(m32_ide)

set(CPACK_PACKAGE_NAME ${PROJECT_NAME})
set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/LICENSE")
set(CPACK_RESOURCE_FILE_README "${CMAKE_CURRENT_SOURCE_DIR}/README.MD")
SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "M32 Virtual CPU")
SET(CPACK_PACKAGE_VENDOR "404: Vendor not found")
SET(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_CURRENT_SOURCE_DIR}/README.MD")
SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/LICENSE")
SET(CPACK_PACKAGE_VERSION_MAJOR ${m32_VERSION_MAJOR})
SET(CPACK_PACKAGE_VERSION_MINOR ${m32_VERSION_MINOR})
SET(CPACK_PACKAGE_VERSION_PATCH "0")
SET(CPACK_PACKAGE_ICON "${CMAKE_SOURCE_DIR}/img\\m32.bmp")
set(CPACK_PACKAGE_EXECUTABLES m32_ide "M32 IDE")
set(CPACK_CREATE_DESKTOP_LINKS m32_ide)
if(WIN32)
    set(CPACK_NSIS_MUI_ICON "${CMAKE_SOURCE_DIR}/img/m32.ico")
    set(CPACK_NSIS_MODIFY_PATH ON)
    set(CPACK_NSIS_INSTALLED_ICON_NAME "bin\\m32_ide.exe")
endif(WIN32)
SET(CPACK_PACKAGE_INSTALL_DIRECTORY "${CMAKE_PROJECT_NAME} ${m32_VERSION_MAJOR}.${m32_VERSION_MINOR}")

include(CPack)
